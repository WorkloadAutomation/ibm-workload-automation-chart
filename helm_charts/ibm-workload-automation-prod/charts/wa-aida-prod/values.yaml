# *******************************************************************************
# Licensed Materials - Property of HCL
# (c) Copyright HCL Technologies Ltd. 2022. All Rights Reserved.
#
# Note to U.S. Government Users Restricted Rights:
# Use, duplication or disclosure restricted by GSA ADP Schedule
# *******************************************************************************
global:
  license: notaccepted
  serviceAccountName: wauser
  aidaEngineLogLevel: "INFO"
  redisPwd: "default"
  defaultShardCount: 1
aida-ad:
  image:
    repository: cp.icr.io/cp/ibm-aida-ad
    tag: 10.1.0.00.20220722
    pullPolicy: Always
  serviceAccount:
    create: false
    annotations: {}
    name: ""
  resources:
    limits:
      cpu: 2
      memory: 8Gi
    requests:
      cpu: 0.5
      memory: 1Gi
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 10
    targetMemoryUtilizationPercentage: 80
aida-es:
  esDiscoveryType: "single-node"
  #discoverySeedHosts: hostname,[::1]
  #clusterInitialMasterNode: node-1
  image:
    repository: "amazon/opendistro-for-elasticsearch"
    tag: "1.13.3"
    pullPolicy: Always
  serviceAccount:
    create: false
    annotations: {}
    name: ""
  persistence:
    # Determine whether to use Persistent Volumes for the pods
    enabled: true
    # Determine whether to use Storage Classes to dynamically create Persistent Volumes for the pods
    useDynamicProvisioning: true
    #
    # Settings for the pod Persistent Volume Claims,
    # which each pod uses for data
    dataPVC:
      # Name of the Storage Class to use. If no Storage Class is used, leave an empty string
      storageClassName: ""
      # If your not using dynamic provisioning, you can use selectors to
      # refine the binding process. You cannot specify a selector if you are using dynamic provisioning!
      selector:
        label: ""
        value: ""
      # Minimum size of the Persistent Volume
      size: 10Gi
  resources:
    limits:
      cpu: 4
      memory: 8Gi
    requests:
      cpu: 0.5
      memory: 1Gi
aida-exporter:
  # specifiy the WA Server hostname (internal or external service/route)
  waHostName: ""
  waPort: 31116
  httpAuthUsername: "wauser"
  httpAuthPasswordSecretName: wa-pwd-secret
  image:
    repository: cp.icr.io/cp/ibm-aida-exporter
    tag: 10.1.0.00.20220722
    pullPolicy: Always
  serviceAccount:
    create: false
    annotations: {}
    name: ""
  resources:
    limits:
      cpu: 2
      memory: 4Gi
    requests:
      cpu: 0.5
      memory: 0.5Gi
aida-email:
  smtpServer: "smtp.server.com"
  smtpPort: "587"
  senderEmailId: "smtp@server.com"
  senderEmailPwd: "smtpPassword"
  recipientMailIds: "mail1@mail.com,mail2@mail.com"
  image:
    repository: cp.icr.io/cp/ibm-aida-email
    tag: 10.1.0.00.20220722
    pullPolicy: Always
  serviceAccount:
    create: false
    annotations: {}
    name: ""
  resources:
    limits:
      cpu: 1
      memory: 2Gi
    requests:
      cpu: 200m
      memory: 0.5Gi
aida-nginx:
  waConsoleCertSecretName: waconsole-cert-secret
  image:
    repository: cp.icr.io/cp/ibm-aida-nginx
    tag: 10.1.0.00.20220722
    pullPolicy: Always
  serviceAccount:
    create: false
    annotations: {}
    name: ""
  routes:
    enabled: true
  ingress:
    hostname:
    secretName: wa-console-ingress-secret
  exposeServiceType: LoadBalancer
  exposeServiceAnnotation:
    {}
    #cert-manager.io/issuer: wa-ca-issuer
    #service.beta.kubernetes.io/aws-load-balancer-backend-protocol: https
    #service.beta.kubernetes.io/aws-load-balancer-type: "clb"
    #service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    #service.beta.kubernetes.io/aws-load-balancer-internal: "true"
    #service.beta.kubernetes.io/azure-load-balancer-internal: "true"
    #networking.gke.io/load-balancer-type: "Internal"
  resources:
    limits:
      cpu: 1
      memory: 1Gi
    requests:
      cpu: 200m
      memory: 200Mi
aida-orchestrator:
  image:
    repository: cp.icr.io/cp/ibm-aida-orchestrator
    tag: 10.1.0.00.20220722
    pullPolicy: Always
  serviceAccount:
    create: false
    annotations: {}
    name: ""
  resources:
    limits:
      cpu: 2
      memory: 4Gi
    requests:
      cpu: 0.5
      memory: 0.5Gi
aida-predictor:
  image:
    repository: cp.icr.io/cp/ibm-aida-predictor
    tag: 10.1.0.00.20220722
    pullPolicy: Always
  serviceAccount:
    create: false
    annotations: {}
    name: ""
  resources:
    limits:
      cpu: 8
      memory: 16Gi
    requests:
      cpu: 1
      memory: 1Gi
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 10
    targetMemoryUtilizationPercentage: 80
aida-redis:
  image:
    repository: cp.icr.io/cp/ibm-aida-redis
    tag: 10.1.0.00.20220722
    pullPolicy: Always
  serviceAccount:
    create: false
    annotations: {}
    name: ""
  resources:
    limits:
      cpu: 1
      memory: 500Mi
    requests:
      cpu: 200m
      memory: 200Mi
aida-ui:
  uiLogLevel: "ERROR:*,INFO:*,-TRACE:*"
  image:
    repository: cp.icr.io/cp/ibm-aida-ui
    tag: 10.1.0.00.20220722
    pullPolicy: Always
  serviceAccount:
    create: false
    annotations: {}
    name: ""
  resources:
    limits:
      cpu: 1
      memory: 2Gi
    requests:
      cpu: 0.3
      memory: 0.5Gi
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 10
    targetCPUUtilizationPercentage: 80
